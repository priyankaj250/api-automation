"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Jun 09 09:13:23 UTC 2025","Mon Jun 09 09:13:23 UTC 2025","280","","tests.UserAuthTests","","tests.UserAuthTests","testLogin","User Login","Login with the credentials used during signup"
"passed","Mon Jun 09 09:13:23 UTC 2025","Mon Jun 09 09:13:23 UTC 2025","10","","tests.UserAuthTests","","tests.UserAuthTests","testLoginWrongEmail","Login with Wrong Email","Attempt to login with a wrong email and correct password"
"passed","Mon Jun 09 09:13:22 UTC 2025","Mon Jun 09 09:13:22 UTC 2025","39","","tests.GetBookTest","","tests.GetBookTest","testGetBook","Get created book by ID (Positive)","Verifies that a book can be retrieved successfully by its ID after creation."
"passed","Mon Jun 09 09:13:23 UTC 2025","Mon Jun 09 09:13:23 UTC 2025","12","","tests.UpdateBookTest","","tests.UpdateBookTest","testUpdateNonExistentBook","Update non-existent book (Negative)","Checks that updating a book with a non-existent ID returns a 404 error."
"passed","Mon Jun 09 09:13:23 UTC 2025","Mon Jun 09 09:13:23 UTC 2025","273","","tests.UserAuthTests","","tests.UserAuthTests","testLoginWrongPassword","Login with Wrong Password","Attempt to login with the correct email but wrong password"
"passed","Mon Jun 09 09:13:22 UTC 2025","Mon Jun 09 09:13:22 UTC 2025","10","","tests.GetBookTest","","tests.GetBookTest","testGetBookInvalidIdFormat","Get book with invalid book ID format (Negative)","Checks if API handles an invalid ID format properly with a 422 status."
"passed","Mon Jun 09 09:13:22 UTC 2025","Mon Jun 09 09:13:22 UTC 2025","282","","tests.UserAuthTests","","tests.UserAuthTests","testSignup","User Signup","Register a new user with valid email and password"
"passed","Mon Jun 09 09:13:22 UTC 2025","Mon Jun 09 09:13:23 UTC 2025","297","","tests.UserAuthTests","","tests.UserAuthTests","testDuplicateSignup","Duplicate Signup","Attempt to sign up with an already registered email"
"passed","Mon Jun 09 09:13:21 UTC 2025","Mon Jun 09 09:13:21 UTC 2025","97","","tests.DeleteBookTest","","tests.DeleteBookTest","testDeleteBook","Delete book (Positive)","This test validates successful deletion of an existing book by ID."
"passed","Mon Jun 09 09:13:21 UTC 2025","Mon Jun 09 09:13:22 UTC 2025","28","","tests.CreateBookTest","","tests.CreateBookTest","testCreateBookMissingFields","Create Book - Missing Required Fields (Negative)","This test checks that creating a book without 'name' fails with proper error response."
"passed","Mon Jun 09 09:13:21 UTC 2025","Mon Jun 09 09:13:21 UTC 2025","53","","tests.CreateBookTest","","tests.CreateBookTest","testCreateBook","Create a new book successfully (Positive)","This test verifies that a book can be created successfully with valid details."
"passed","Mon Jun 09 09:13:21 UTC 2025","Mon Jun 09 09:13:21 UTC 2025","15","","tests.DeleteBookTest","","tests.DeleteBookTest","testDeleteBookNotFound","Delete book - Book Not Found (Negative)","This test ensures the API returns 404 when attempting to delete a non-existent book ID."
"passed","Mon Jun 09 09:13:23 UTC 2025","Mon Jun 09 09:13:23 UTC 2025","62","","tests.UpdateBookTest","","tests.UpdateBookTest","testUpdateBook","Update book successfully (Positive)","Ensures a book's details can be updated successfully when a valid ID is provided."
"passed","Mon Jun 09 09:13:22 UTC 2025","Mon Jun 09 09:13:22 UTC 2025","32","","tests.CreateBookTest","","tests.CreateBookTest","testCreateBookDuplicateId","Create Book - Duplicate Book ID (Negative)","This test ensures the API rejects book creation with an already used ID."
"passed","Mon Jun 09 09:13:22 UTC 2025","Mon Jun 09 09:13:22 UTC 2025","12","","tests.GetBookTest","","tests.GetBookTest","testGetNonExistentBook","Get non-existent book by ID (Negative)","Validates that the API returns 404 for a non-existent book ID."
